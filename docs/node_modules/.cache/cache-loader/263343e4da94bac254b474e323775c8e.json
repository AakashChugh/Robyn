{"remainingRequest":"/Users/leonelsentana/Robyn-master/docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/leonelsentana/Robyn-master/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/leonelsentana/Robyn-master/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/leonelsentana/Robyn-master/docs/docs/doc8.md","dependencies":[{"path":"/Users/leonelsentana/Robyn-master/docs/docs/doc8.md","mtime":1604587771027},{"path":"/Users/leonelsentana/Robyn-master/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-doc-8-md-7c5.json","mtime":1604655284106},{"path":"/Users/leonelsentana/Robyn-master/docs/node_modules/cache-loader/dist/cjs.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn-master/docs/node_modules/babel-loader/lib/index.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn-master/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn-master/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1604583336000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4tbWFzdGVyL2RvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIi9Vc2Vycy9sZW9uZWxzZW50YW5hL1JvYnluLW1hc3Rlci9kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCB2YXIgZnJvbnRNYXR0ZXI9e2lkOidkb2M4Jyx0aXRsZTonQ2FsaWJyYXRpb24gdXNpbmcgZXhwZXJpbWVudGFsIHJlc3VsdHMnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6ImRvYzgiLCJpZCI6ImRvYzgiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiQ2FsaWJyYXRpb24gdXNpbmcgZXhwZXJpbWVudGFsIHJlc3VsdHMiLCJkZXNjcmlwdGlvbiI6IkNhbGlicmF0aW9uIGNvbmNlcHQiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2RvYzgubWQiLCJwZXJtYWxpbmsiOiIvUm9ieW4vZG9jcy9kb2M4IiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9va2V4cGVyaW1lbnRhbC9Sb2J5bi9kb2NzL2RvYzgubWQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkF1dG9tYXRlZCBoeXBlcnBhcmFtZXRlciBzZWxlY3Rpb24gYW5kIG9wdGltaXphdGlvbiIsInBlcm1hbGluayI6Ii9Sb2J5bi9kb2NzL2RvYzcifSwibmV4dCI6eyJ0aXRsZSI6Ik91dHB1dHMgYW5kIGRpYWdub3N0aWNzIiwicGVybWFsaW5rIjoiL1JvYnluL2RvY3MvZG9jOSJ9fTsvKiBAanN4IG1keCAqL2ltcG9ydCB1c2VCYXNlVXJsIGZyb20nQGRvY3VzYXVydXMvdXNlQmFzZVVybCc7ZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidDYWxpYnJhdGlvbiBjb25jZXB0JyxpZDonY2FsaWJyYXRpb24tY29uY2VwdCcsY2hpbGRyZW46W119LHt2YWx1ZTonQ2FsaWJyYXRpb24gaW4gdGhlIGNvZGUnLGlkOidjYWxpYnJhdGlvbi1pbi10aGUtY29kZScsY2hpbGRyZW46W119XTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgzIix7ImlkIjoiY2FsaWJyYXRpb24tY29uY2VwdCJ9LCJDYWxpYnJhdGlvbiBjb25jZXB0IiksbWR4KCJwIixudWxsLCJCeSBhcHBseWluZyByZXN1bHRzIGZyb20gcmFuZG9taXplZCBjb250cm9sbGVkLWV4cGVyaW1lbnRzLCB5b3UgbWF5IGltcHJvdmUgdGhlIGFjY3VyYWN5IG9mIHlvdXIgbWFya2V0aW5nIG1peCBtb2RlbHMgZHJhbWF0aWNhbGx5LiBJdCBpcyByZWNvbW1lbmRlZCB0byBydW4gdGhlc2Ugb24gYSByZWN1cnJlbnQgYmFzaXMgdG8ga2VlcCB0aGUgbW9kZWwgY2FsaWJyYXRlZCBwZXJtYW5lbnRseS4gSW4gZ2VuZXJhbCwgd2Ugd2FudCB0byBjb21wYXJlIHRoZSBleHBlcmltZW50IHJlc3VsdCB3aXRoIHRoZSBNTU0gZXN0aW1hdGlvbiBvZiBhIG1hcmtldGluZyBjaGFubmVsLiBDb25jZXB0dWFsbHksIHRoaXMgbWV0aG9kIGlzIGxpa2UgYSBCYXllc2lhbiBtZXRob2QsIGluIHdoaWNoIHdlIHVzZSBleHBlcmltZW50IHJlc3VsdHMgYXMgYSBwcmlvciB0byBzaHJpbmsgdGhlIGNvZWZmaWNpZW50cyBvZiBtZWRpYSB2YXJpYWJsZXMuIEEgZ29vZCBleGFtcGxlIG9mIHRoZXNlIHR5cGVzIG9mIGV4cGVyaW1lbnRzIGlzIEZhY2Vib29rXHUyMDE5cyBjb252ZXJzaW9uIGxpZnQgdG9vbCB3aGljaCBjYW4gaGVscCBndWlkZSB0aGUgbW9kZWwgdG93YXJkcyBhIHNwZWNpZmljIHJhbmdlIG9mIGluY3JlbWVudGFsIHZhbHVlcy4iKSxtZHgoImltZyIse2FsdDoiQ2FsaWJyYXRpb24gY2hhcnQiLHNyYzp1c2VCYXNlVXJsKCcvaW1nL2NhbGlicmF0aW9uMS5wbmcnKX0pLG1keCgicCIsbnVsbCwiRmlndXJlIGlsbHVzdHJhdGVzIHRoZSBjYWxpYnJhdGlvbiBwcm9jZXNzIGFib3ZlIGZvciBvbmUgTU1NIGNhbmRpZGF0ZSBtb2RlbC5cblRhYmxlIGJlbG93IGlsbHVzdHJhdGVzIHRoZSBtb2RlbCBzZWxlY3Rpb24gb3V0cHV0IGluY2x1ZGluZyBGQiBsaWZ0IGNhbGlicmF0aW9uIGVsZW1lbnQuIE1vZGVsZXJzIGNhbiBzZWxlY3QgdGhlIHRvcCBtb2RlbHMgd2l0aCByZWxhdGl2ZWx5IHNtYWxsIE1BUEUgbWV0cmljcyBhcyB0aGUgY2FuZGlkYXRlcyBmb3IgdGhlIGZpbmFsIG1vZGVsLiBJbiB0aGlzIGV4YW1wbGUsIHdlIHN1Z2dlc3QgcGlja2luZyBtb2RlbCB0d28sIGFzIGl0IGhhcyB0aGUgbWluaW11bSAiLG1keCgiZW0iLG51bGwsIk1BUEUoY2FsLGZiKSIpLCIgYW5kIGl0cyAiLG1keCgiZW0iLG51bGwsIk1BUEUoaG9sZG91dCkiKSwiIGlzIG9ubHkgMC40JSBtb3JlIHRoYW4gdGhlIG1pbmltdW0gb25lLiIpLG1keCgiaDQiLHsiaWQiOiJleGFtcGxlLXRhYmxlIn0sIkV4YW1wbGUgVGFibGUiKSxtZHgoInAiLG51bGwsIlNhbXBsZSBvdXRwdXQgb2YgbW9kZWwgc2VsZWN0aW9uIG9mIGEgTU1NIHdpdGggb25seSB0d28gbWVkaWEgY2hhbm5lbHMsIFRWIGFuZCBTb2NpYWwiKSxtZHgoImltZyIse2FsdDoiQ2FsaWJyYXRpb24gdGFibGUiLHNyYzp1c2VCYXNlVXJsKCcvaW1nL2NhbGlicmF0aW9uMi5wbmcnKX0pLG1keCgicCIsbnVsbCwiTm90ZSB0aGF0ICIsbWR4KCJlbSIsbnVsbCwiTUFQRShjYWwsZmIpIiksIiB3aWxsIGxpa2VseSB2YXJ5IG1vcmUgd2lkZWx5IHRoYW4gIixtZHgoImVtIixudWxsLCJNQVBFKGhvbGRvdXQpIiksIiAuIEdpdmVuIHRoaXMsIGNhbGlicmF0aW9uIGNhbiBpbXByb3ZlIHBlcmZvcm1hbmNlIHdpdGhvdXQgc3Vic3RhbnRpYWxseSBzYWNyaWZpY2luZyBiYWNrdGVzdGluZyBwZXJmb3JtYW5jZS5cblRoaXMgY2FsaWJyYXRpb24gbWV0aG9kIGNhbiBiZSBhcHBsaWVkIHRvIG90aGVyIG1lZGlhIGNoYW5uZWxzIHdoaWNoIHJ1biBleHBlcmltZW50cywgdGhlIG1vcmUgY2hhbm5lbHMgdGhhdCBhcmUgY2FsaWJyYXRlZCwgdGhlIG1vcmUgYWNjdXJhdGUgdGhlIE1NTSBtb2RlbC4gIixtZHgoImVtIixudWxsLCJZb3UgbWF5IGZpbmQgdGhlIGNhbGlicmF0aW9uIGZ1bmN0aW9uIGluIHRoZSBcdTIwMThmdW5jLlJcdTIwMTkgc2NyaXB0LiIpKSxtZHgoImgzIix7ImlkIjoiY2FsaWJyYXRpb24taW4tdGhlLWNvZGUifSwiQ2FsaWJyYXRpb24gaW4gdGhlIGNvZGUiKSxtZHgoInAiLG51bGwsIlNvLCBob3cgZG8gd2UgYXBwbHkgdGhpcyBpbiBvdXIgY29kZT8iKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJGaXJzdCwgd2UgY2hlY2sgaWYgbWVkaWEgY2hhbm5lbHMgdG8gYmUgY2FsaWJyYXRlZCBhY3R1YWxseSBoYXZlIGEgbWVkaWEgdmFyaWFibGUgY3JlYXRlZC4iKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiQWZ0ZXIgdGhhdCwgd2UgY29sbGVjdCBhbGwgZGlmZmVyZW50IG1lZGlhIHRvIGJlIGNhbGlicmF0ZWQuIENvbnNlcXVlbnRseSwgd2UgbG9vcCBvdmVyIGVhY2ggbGlmdCBjaGFubmVsIChXaGVyZSBmb3IgZWFjaCBvZiB0aGVtIHdlIGl0ZXJhdGUgb3ZlciBhbGwgZGlmZmVyZW50IHN0dWRpZXMgaWYgbW9yZSB0aGFuIG9uZSwgZGV0ZXJtaW5pbmcgdGhlIGRhdGUgcmFuZ2Ugb2YgZWFjaCBzdHVkeSkiKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiSW4gYWRkaXRpb24sIHdlIGNvbnZlcnQgZGF0YSBmcm9tIHdlZWtzIHRvIGRheXMgKFBsZWFzZSBub3RlIHRoZSAqNyBpbiB0aGUgZm9ybXVsYSBmb3IgbW1tRGF5cywgdGhpcyBpcyBhc3N1bWluZyB5b3Ugd2lsbCB1c2Ugd2Vla2x5IGRhdGEgYXMgYSBiYXNpcyBmb3IgeW91ciBtb2RlbCkuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkZpbmFsbHksIGFuZCBvbmNlIGJvdGggbGlmdCBzdHVkeSBhbmQgTU1NIGRhdGVzIGFyZSBib3RoIGluIGRheXMsIHdlIHNjYWxlIHRoZSB0b3RhbCBkZWNvbXBvc2VkIG1vZGVsIHByZWRpY3RlZCBzYWxlcyBpbnRvIHRoZSBleGFjdCBudW1iZXIgb2YgZGF5cyB0aGUgbGlmdCBzdHVkeSBoYWQgdG8gYmUgY29tcGFyYWJsZSB3aXRoIHByZXZpb3VzbHkgdXBsb2FkZWQgbGlmdEFicyBudW1iZXIgdW5kZXIgdGhlIHNldF9saWZ0IHZhcmlhYmxlIChyZW1lbWJlciBsaWZ0QWJzIHZhbHVlcyBpbiBzZXRfbGlmdCB2YXJpYWJsZSBoYXZlIHRvIGJlIGFic29sdXRlIGFuZCBtZWFzdXJpbmcgdGhlIHNhbWUgbWV0cmljIGFzIHRoZSBtb2RlbCBkb2VzIGllLiB0b3RhbCBpbmNyZW1lbnRhbCBzYWxlcyB2cy4gbW9kZWwgcHJlZGljdGVkIHNhbGVzKSIpKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIiMjIyMgRGVmaW5lIGxpZnQgY2FsaWJyYXRpb24gZnVuY3Rpb25cbmYuY2FsaWJyYXRlTGlmdCA8LSBmdW5jdGlvbihkZWNvbXBDb2xsZWN0LCBzZXRfbGlmdCkge1xuXG4gIGNoZWNrX3NldF9saWZ0IDwtIGFueShzYXBwbHkoc2V0X2xpZnQkY2hhbm5lbCwgZnVuY3Rpb24oeCkgYW55KHN0cl9kZXRlY3QoeCwgc2V0X21lZGlhVmFyTmFtZSkpKT09RikgI2NoZWNrIGlmIGFueSBsaWZ0IGNoYW5uZWwgZG9lc24ndCBoYXZlIG1lZGlhIHZhclxuICBpZiAoY2hlY2tfc2V0X2xpZnQpIHtzdG9wKFwic2V0X2xpZnQgY2hhbm5lbHMgbXVzdCBoYXZlIG1lZGlhIHZhcmlhYmxlXCIpfVxuICAjIyBwcmVwIGxpZnQgaW5wdXQgIFxuICBnZXRMaWZ0TWVkaWEgPC0gdW5pcXVlKHNldF9saWZ0JGNoYW5uZWwpXG4gIGdldERlY29tcFZlYyA8LSBkZWNvbXBDb2xsZWN0JHhEZWNvbXBWZWNcblxuICAjIyBsb29wIGFsbCBsaWZ0IGlucHV0XG4gIGxpZnRDb2xsZWN0IDwtIGxpc3QoKVxuICBmb3IgKG0gaW4gMTpsZW5ndGgoZ2V0TGlmdE1lZGlhKSkgeyAjIGxvb3AgcGVyIGxpZnQgY2hhbm5lbFxuXG4gICAgbGlmdFdoaWNoIDwtIHN0cl93aGljaChzZXRfbGlmdCRjaGFubmVsLCBnZXRMaWZ0TWVkaWFbbV0pXG5cbiAgICBsaWZ0Q29sbGVjdDIgPC0gbGlzdCgpXG4gICAgZm9yIChsdyBpbiAxOmxlbmd0aChsaWZ0V2hpY2gpKSB7ICMgbG9vcCBwZXIgbGlmdCB0ZXN0IHBlciBjaGFubmVsXG5cbiAgICAgICMjIGdldCBsaWZ0IHBlcmlvZCBzdWJzZXRcbiAgICAgIGxpZnRTdGFydCA8LSBzZXRfbGlmdFtsaWZ0V2hpY2hbbHddLCBsaWZ0U3RhcnREYXRlXVxuICAgICAgbGlmdEVuZCA8LSBzZXRfbGlmdFtsaWZ0V2hpY2hbbHddLCBsaWZ0RW5kRGF0ZV1cbiAgICAgIGxpZnRQZXJpb2RWZWMgPC0gZ2V0RGVjb21wVmVjW0RTID49IGxpZnRTdGFydCAmIERTIDw9IGxpZnRFbmQsIGMoXCJEU1wiLCBnZXRMaWZ0TWVkaWFbbV0pLCB3aXRoID0gRl1cblxuICAgICAgIyMgc2NhbGUgZGVjb21wXG4gICAgICBtbW1EYXlzIDwtIG5yb3cobGlmdFBlcmlvZFZlYykgKiA3XG4gICAgICBsaWZ0RGF5cyA8LSBhcy5pbnRlZ2VyKGxpZnRFbmQtIGxpZnRTdGFydCArIDEpXG4gICAgICB5X2hhdExpZnQgPC0gc3VtKHVubGlzdChnZXREZWNvbXBWZWNbLCAtMV0pKSAjIHRvdGFsIHByZWQgc2FsZXNcbiAgICAgIHhfZGVjb21wTGlmdCA8LSBzdW0obGlmdFBlcmlvZFZlY1ssMl0pXG4gICAgICB4X2RlY29tcExpZnRTY2FsZWQgPC0geF9kZWNvbXBMaWZ0IC8gbW1tRGF5cyAqIGxpZnREYXlzXG5cbiAgICAgICMjIG91dHB1dFxuICAgICAgbGlmdENvbGxlY3QyW1tsd11dIDwtIGRhdGEudGFibGUobGlmdE1lZGlhID0gZ2V0TGlmdE1lZGlhW21dICxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZnRTdGFydCA9IGxpZnRTdGFydCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZnRFbmQgPSBsaWZ0RW5kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlmdEFicyA9IHNldF9saWZ0W2xpZnRXaGljaFtsd10sIGxpZnRBYnNdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjb21wQWJzU2NhbGVkID0geF9kZWNvbXBMaWZ0U2NhbGVkKVxuICAgIH1cbiAgICBsaWZ0Q29sbGVjdFtbbV1dIDwtIHJiaW5kbGlzdChsaWZ0Q29sbGVjdDIpXG4gIH1cbiIpKSxtZHgoInAiLG51bGwsIlRoZSBsYXN0IHN0ZXAgaXMgdG8gY2FsY3VsYXRlIHRoZSBNQVBFLiBUaGlzIHdpbGwgYmUgdGhlIGtleSBtZXRyaWMgdG8gZGVmaW5lIHRoZSBtb2RlbCB0aGF0IGlzIGNsb3Nlc3QgdG8gYWN0dWFsIGluY3JlbWVudGFsIHNhbGVzIGR1cmluZyBwZXJpb2RzIGZvciB0aGUgbGlmdCBzdHVkeS4gSXQgd2lsbCB0aGVyZWZvcmUgYWxsb3cgdXMgdG8gbWFrZSBhIGRlY2lzaW9uIGFzIHBlciB0aGUgZXhhbXBsZSBvbiB0aGUgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiI2V4YW1wbGUtdGFibGUifSksbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJhIn0sInRhYmxlIikpLCIuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLCIgICMjIGdldCBtYXBlX2xpZnRcbiAgbGlmdENvbGxlY3QgPC0gcmJpbmRsaXN0KGxpZnRDb2xsZWN0KVssIG1hcGVfbGlmdCA6PSBhYnMoKGRlY29tcEFic1NjYWxlZCAtIGxpZnRBYnMpIC8gbGlmdEFicykgKiAxMDBdXG4gIHJldHVybihsaWZ0Q29sbGVjdClcbn1cbiIpKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}