{"remainingRequest":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/leonelsentana/Robyn/docs/docs/doc7.md","dependencies":[{"path":"/Users/leonelsentana/Robyn/docs/docs/doc7.md","mtime":1597331510000},{"path":"/Users/leonelsentana/Robyn/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-doc-7-md-e3d.json","mtime":1601564889706},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/cache-loader/dist/cjs.js","mtime":1597247035000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js","mtime":1597247034000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1597247056000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1597247054000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4vZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidkb2M3Jyx0aXRsZTonQXV0b21hdGVkIGh5cGVycGFyYW1ldGVyIHNlbGVjdGlvbiBhbmQgb3B0aW1pemF0aW9uJ307ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6ImRvYzciLCJpZCI6ImRvYzciLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiQXV0b21hdGVkIGh5cGVycGFyYW1ldGVyIHNlbGVjdGlvbiBhbmQgb3B0aW1pemF0aW9uIiwiZGVzY3JpcHRpb24iOiJNTU1zIGFyZSBsaWtlbHkgdG8gY29udGFpbiBoaWdoIGNhcmRpbmFsaXR5IG9mIHBhcmFtZXRlcnMsIGllLiBhbHBoYXMsIHRoZXRhcyBhbmQgZ2FtbWFzIGZvciBnZW9tZXRyaWMgYWQgc3RvY2sgdHJhbnNmb3JtYXRpb24uIEluIGFkZGl0aW9uLCBwYXJhbWV0ZXJzIGRpbWVuc2lvbmFsaXR5IGluY3JlYXNlcyBwcm9wb3J0aW9uYWxseSB3aXRoIHRoZSB0b3RhbCBudW1iZXIgb2YgbWFya2V0aW5nIGNoYW5uZWxzIHRvIGJlIG1lYXN1cmVkLiBUaHVzLCBpdCBpcyBleHRyZW1lbHkgbmVjZXNzYXJ5IHRvIGRlYWwgd2l0aCBhIGhpZ2ggZGltZW5zaW9uYWxpdHkgcGFyYW1ldGVyIHNwYWNlIHdoZXJlLCB0aGUgZ3JlYXRlciB0aGUgbnVtYmVyIG9mIHBhcmFtZXRlcnMsIHRoZSBncmVhdGVyIHRoZSBtb2RlbCBjb21wbGV4aXR5IGFuZCBjb21wdXRhdGlvbmFsIHJlcXVpcmVtZW50cy4gSW4gb3JkZXIgdG8gYWNoaWV2ZSBjb21wdXRhdGlvbmFsIGVmZmljaWVuY3kgd2hpbGUgbWFpbnRhaW5pbmcgb3ZlcmFsbCBtb2RlbCBhY2N1cmFjeSwgd2UgdXRpbGl6ZSBhIHNldCBvZiB0ZWNobmlxdWVzIGFuZCBhbGdvcml0aG1zOiIsInNvdXJjZSI6IkBzaXRlL2RvY3MvZG9jNy5tZCIsInBlcm1hbGluayI6Ii9kb2NzL2RvYzciLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL2RvYzcubWQiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkZhY2Vib29rIFByb3BoZXQgLSBUcmVuZCwgU2Vhc29uYWxpdHkgYW5kIEhvbGlkYXkgRWZmZWN0cyIsInBlcm1hbGluayI6Ii9kb2NzL2RvYzYifSwibmV4dCI6eyJ0aXRsZSI6IkNhbGlicmF0aW9uIHVzaW5nIGV4cGVyaW1lbnRhbCByZXN1bHRzIiwicGVybWFsaW5rIjoiL2RvY3MvZG9jOCJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgTU1NcyBhcmUgbGlrZWx5IHRvIGNvbnRhaW4gaGlnaCBjYXJkaW5hbGl0eSBvZiBwYXJhbWV0ZXJzLCBpZS4gYWxwaGFzLCB0aGV0YXMgYW5kIGdhbW1hcyBmb3IgZ2VvbWV0cmljIGFkIHN0b2NrIHRyYW5zZm9ybWF0aW9uLiBJbiBhZGRpdGlvbiwgcGFyYW1ldGVycyBkaW1lbnNpb25hbGl0eSBpbmNyZWFzZXMgcHJvcG9ydGlvbmFsbHkgd2l0aCB0aGUgdG90YWwgbnVtYmVyIG9mIG1hcmtldGluZyBjaGFubmVscyB0byBiZSBtZWFzdXJlZC4gVGh1cywgaXQgaXMgZXh0cmVtZWx5IG5lY2Vzc2FyeSB0byBkZWFsIHdpdGggYSBoaWdoIGRpbWVuc2lvbmFsaXR5IHBhcmFtZXRlciBzcGFjZSB3aGVyZSwgdGhlIGdyZWF0ZXIgdGhlIG51bWJlciBvZiBwYXJhbWV0ZXJzLCB0aGUgZ3JlYXRlciB0aGUgbW9kZWwgY29tcGxleGl0eSBhbmQgY29tcHV0YXRpb25hbCByZXF1aXJlbWVudHMuIEluIG9yZGVyIHRvIGFjaGlldmUgY29tcHV0YXRpb25hbCBlZmZpY2llbmN5IHdoaWxlIG1haW50YWluaW5nIG92ZXJhbGwgbW9kZWwgYWNjdXJhY3ksIHdlIHV0aWxpemUgYSBzZXQgb2YgdGVjaG5pcXVlcyBhbmQgYWxnb3JpdGhtczpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBBIGAsbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LGBzYW1wbGluZyBtZXRob2RgKSxgIHRvIHNlYXJjaCBmb3IgY2FuZGlkYXRlcyB0aGF0IGFjY3VyYXRlbHkgcmVwcmVzZW50cyB0aGUgbXVsdGktZGltZW5zaW9uYWwgaHlwZXJwYXJhbWV0ZXIgc3BhY2UgKExIUyBMYXRpbmh5cGVyY3ViZSBzYW1wbGluZylgKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGAjIyMjIERlZmluZSBsYXRpbiBoeXBlcmN1YmUgc2FtcGxpbmcgZnVuY3Rpb24KZi5oeXBTYW1MSFMgPC0gZnVuY3Rpb24oc2V0X21lZGlhVmFyTmFtZSwgaXRlck4sIGh5cGVyYm91bmQuZ2xvYmFsLCBhZHN0b2NrKQoKYCkpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEEgYCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sYGNyb3NzLXZhbGlkYXRpb24gc2NoZW1lYCksYCB0aGF0IGFsbG93cyB0byBoYXZlIG11bHRpcGxlIGRhdGFzZXQgZm9sZHMgdG8gdHJhaW4gYW5kIHZhbGlkYXRlIHRoZSBtb2RlbC4gVGhpcyBhbGxvd3MgdXNpbmcgMTAwJSBvZiB0aGUgdHJhaW4vdmFsaWRhdGlvbiBkYXRhc2V0IHdoaWxlIHJlZHVjaW5nIHRoZSBjaGFuY2Ugb2YgdGhlIG1vZGVsIG92ZXJmaXR0aW5nIGFuZCBkZWZpbmluZyBvcHRpbWFsIHJlZ3VsYXJpemF0aW9uIGxhbWJkYS5gKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGAjIyMgZml0IHJpZGdlIHJlZ3Jlc3Npb24gd2l0aCB4LXZhbGlkYXRpb24KICAgICAgY3Ztb2QgPC0gY3YuZ2xtbmV0KHhfdHJhaW4KICAgICAgICAgICAgICAgICAgICAgICAgICx5X3RyYWluCiAgICAgICAgICAgICAgICAgICAgICAgICAsZmFtaWx5ID0gImdhdXNzaWFuIgogICAgICAgICAgICAgICAgICAgICAgICAgLGFscGhhID0gMCAjMCBmb3IgcmlkZ2UgcmVncmVzc2lvbgogICAgICAgICAgICAgICAgICAgICAgICAgLGxhbWJkYSA9IGxhbWJkYV9zZXEKICAgICAgICAgICAgICAgICAgICAgICAgICxsb3dlci5saW1pdHMgPSBsb3dlci5saW1pdHMKICAgICAgICAgICAgICAgICAgICAgICAgICx1cHBlci5saW1pdHMgPSB1cHBlci5saW1pdHMKICAgICAgICAgICAgICAgICAgICAgICAgICx0eXBlLm1lYXN1cmUgPSAibXNlIgogICAgICApCgpgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQW4gYCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sYG9wdGltaXphdGlvbiBhbGdvcml0aG1gKSxgIChSYW5kb20gU2VhcmNoKSB3aXRoIGEgc2NvcmUgZnVuY3Rpb24gKFIyb3IgTUFQRSkgdG8gbWluaW1pemUgb3IgbWF4aW1pemUuIFRoaXMgYWxsb3dzIHRoZSBtb2RlbCB0byBvYnRhaW4gb3B0aW1hbCByZXN1bHRzIHRoYXQgbWluaW1pemUgdGhlIGVycm9yIGZvciBleGFtcGxlLCB3aXRoaW4gdGhlIGh5cGVycGFyYW1ldGVyIHNhbXBsZWQgc3BhY2UgYW5kIHJlZHVjZSBjb21wdXRhdGlvbmFsIGVmZm9ydC5gKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGBmLm1tbS5SU29wdGltIDwtIGZ1bmN0aW9uKGh5cGVyYm91bmQuZ2xvYmFsID0gaHlwZXJib3VuZC5nbG9iYWwKICAgICAgICAgICAgICAgICAgICAgICAgICAsaXRlck4gPSBpdGVyTgogICAgICAgICAgICAgICAgICAgICAgICAgICxzZXRDb3JlcyA9IHNldENvcmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgLGVwb2NoTiA9IEluZgogICAgICAgICAgICAgICAgICAgICAgICAgICxvdXQgPSBGCiAgICAgICAgICAgICAgICAgICAgICAgICAgLHRlbXAuY3N2LnBhdGgKKQpgKSksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgQSBgLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgYm9vc3RpbmcgbG9vcGApLGAgdGhhdCBjb25zaWRlcnMgcHJldmlvdXMgUmFuZG9tIFNlYXJjaCBvcHRpbWl6YXRpb24gcmVzdWx0cyBmb3IgYmVzdCBoeXBlcnBhcmFtZXRlcnMgYm91bmRzIGFuZCBmZWVkcyB0aGVzZSBpbnRvIG5ldyBSYW5kb20gU2VhcmNoIG9wdGltaXphdGlvbiBlcG9jaHMuYCkpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgICMgaHlwZXIgb3B0aW1pc2F0aW9uIGxvb3AKICBvcHRpbS5sb29wIDwtIFQKICBvcHRpbS5pdGVyIDwtIDEKICBpZiAoIWV4aXN0cygicmVzdWx0UlMiKSkgewogICAgZXBvY2guaXRlciA8LSAxCiAgICBvcHRpbVBhclJTLmNvbGxlY3QgPC0gbGlzdCgpCiAgfSBlbHNlIHsKICAgIGVwb2NoLml0ZXIgPC0gZXBvY2guaXRlciArIDEKICAgIG9wdGltUGFyUlMuY29sbGVjdCA8LSBsaXN0KHJlc3VsdFJTW1sib3B0aW1QYXJSUyJdXSkKICB9IAogIAogIHdoaWxlIChvcHRpbS5sb29wICYgb3B0aW0uaXRlciA8PSBlcG9jaE4pIHsKICAgIAogICAgYXNzaWduKCJlcG9jaC5pdGVyIiwgZXBvY2guaXRlciwgZW52aXIgPSAuR2xvYmFsRW52KQogICAgYXNzaWduKCJvcHRpbS5pdGVyIiwgb3B0aW0uaXRlciwgZW52aXIgPSAuR2xvYmFsRW52KQogICAgIyBydW4gUlMgbW9kZWwgd2l0aCBhZGFwdGVkIAogICAgCiAgICBzeXNUaW1lUlMgPC0gc3lzdGVtLnRpbWUoewogICAgICByZXN1bHRSUyA8LSBmLm1tbShoeXBlcmJvdW5kLmdsb2JhbAogICAgICAgICAgICAgICAgICAgICAgICAsaXRlclJTID0gaXRlck4KICAgICAgICAgICAgICAgICAgICAgICAgLHNldENvcmVzID0gc2V0Q29yZXMKICAgICAgICAgICAgICAgICAgICAgICAgLG91dCA9IG91dAogICAgICApfSkKYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/leonelsentana/Robyn/docs/docs/doc7.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"sGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,MADwB,CAE5BC,KAAK,CAAE,qDAFqB,CAApB,CAIT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,MADK,CAEtB,KAAM,MAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,qDAJa,CAKtB,cAAe,okBALO,CAMtB,SAAU,oBANY,CAOtB,YAAa,YAPS,CAQtB,UAAW,yEARW,CAStB,UAAW,aATW,CAUtB,WAAY,CACV,QAAS,2DADC,CAEV,YAAa,YAFH,CAVU,CActB,OAAQ,CACN,QAAS,wCADH,CAEN,YAAa,YAFP,CAdc,CAAjB,CAmBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CAEP,KAAMC,CAAAA,WAAW,CAAG,CAClBD,QADkB,CAApB,CAGA,KAAME,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,okBAAL,CAFK,CAGL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,IAAtB,CAA0B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,iBAA1B,CAA1B,CAAgF,+HAAhF,CADF,CAHK,CAML,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;CAAjC,CAAL,CANK,CAUL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,IAAtB,CAA0B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,yBAA1B,CAA1B,CAAwF,oOAAxF,CADF,CAVK,CAaL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;;;;CAAjC,CAAL,CAbK,CAyBL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,KAAtB,CAA2B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,wBAA1B,CAA3B,CAAwF,2OAAxF,CADF,CAzBK,CA4BL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;CAAjC,CAAL,CA5BK,CAoCL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,IAAtB,CAA0B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,eAA1B,CAA1B,CAA8E,yJAA9E,CADF,CApCK,CAuCL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;;;;;;;;;;;;;;;;;;;;;;;CAAjC,CAAL,CAvCK,CAAP,CAgED,CAED,CACAD,UAAU,CAACG,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'doc7',\n\ttitle: 'Automated hyperparameter selection and optimization'\n};\nexport const metadata = {\n  \"unversionedId\": \"doc7\",\n  \"id\": \"doc7\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Automated hyperparameter selection and optimization\",\n  \"description\": \"MMMs are likely to contain high cardinality of parameters, ie. alphas, thetas and gammas for geometric ad stock transformation. In addition, parameters dimensionality increases proportionally with the total number of marketing channels to be measured. Thus, it is extremely necessary to deal with a high dimensionality parameter space where, the greater the number of parameters, the greater the model complexity and computational requirements. In order to achieve computational efficiency while maintaining overall model accuracy, we utilize a set of techniques and algorithms:\",\n  \"source\": \"@site/docs/doc7.md\",\n  \"permalink\": \"/docs/doc7\",\n  \"editUrl\": \"https://github.com/facebook/docusaurus/edit/master/website/docs/doc7.md\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Facebook Prophet - Trend, Seasonality and Holiday Effects\",\n    \"permalink\": \"/docs/doc6\"\n  },\n  \"next\": {\n    \"title\": \"Calibration using experimental results\",\n    \"permalink\": \"/docs/doc8\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`MMMs are likely to contain high cardinality of parameters, ie. alphas, thetas and gammas for geometric ad stock transformation. In addition, parameters dimensionality increases proportionally with the total number of marketing channels to be measured. Thus, it is extremely necessary to deal with a high dimensionality parameter space where, the greater the number of parameters, the greater the model complexity and computational requirements. In order to achieve computational efficiency while maintaining overall model accuracy, we utilize a set of techniques and algorithms:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<strong parentName=\"li\">{`sampling method`}</strong>{` to search for candidates that accurately represents the multi-dimensional hyperparameter space (LHS Latinhypercube sampling)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`#### Define latin hypercube sampling function\nf.hypSamLHS <- function(set_mediaVarName, iterN, hyperbound.global, adstock)\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`A `}<strong parentName=\"li\">{`cross-validation scheme`}</strong>{` that allows to have multiple dataset folds to train and validate the model. This allows using 100% of the train/validation dataset while reducing the chance of the model overfitting and defining optimal regularization lambda.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`### fit ridge regression with x-validation\n      cvmod <- cv.glmnet(x_train\n                         ,y_train\n                         ,family = \"gaussian\"\n                         ,alpha = 0 #0 for ridge regression\n                         ,lambda = lambda_seq\n                         ,lower.limits = lower.limits\n                         ,upper.limits = upper.limits\n                         ,type.measure = \"mse\"\n      )\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`An `}<strong parentName=\"li\">{`optimization algorithm`}</strong>{` (Random Search) with a score function (R2or MAPE) to minimize or maximize. This allows the model to obtain optimal results that minimize the error for example, within the hyperparameter sampled space and reduce computational effort.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`f.mmm.RSoptim <- function(hyperbound.global = hyperbound.global\n                          ,iterN = iterN\n                          ,setCores = setCores\n                          ,epochN = Inf\n                          ,out = F\n                          ,temp.csv.path\n)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`A `}<strong parentName=\"li\">{`boosting loop`}</strong>{` that considers previous Random Search optimization results for best hyperparameters bounds and feeds these into new Random Search optimization epochs.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{` # hyper optimisation loop\n  optim.loop <- T\n  optim.iter <- 1\n  if (!exists(\"resultRS\")) {\n    epoch.iter <- 1\n    optimParRS.collect <- list()\n  } else {\n    epoch.iter <- epoch.iter + 1\n    optimParRS.collect <- list(resultRS[[\"optimParRS\"]])\n  } \n  \n  while (optim.loop & optim.iter <= epochN) {\n    \n    assign(\"epoch.iter\", epoch.iter, envir = .GlobalEnv)\n    assign(\"optim.iter\", optim.iter, envir = .GlobalEnv)\n    # run RS model with adapted \n    \n    sysTimeRS <- system.time({\n      resultRS <- f.mmm(hyperbound.global\n                        ,iterRS = iterN\n                        ,setCores = setCores\n                        ,out = out\n      )})\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}